#!/usr/bin/python3

import rospy
import geometry_msgs.msg
import tf
import moveit_commander
from moveit_msgs.msg import PlanningScene, AttachedCollisionObject
from math import pi


update_scene = rospy.Publisher('/iiwa/move_group/monitored_planning_scene', PlanningScene)
rospy.init_node('update_scene')


new_scene = moveit_commander.PlanningSceneInterface(synchronous=True)

tesla_part_pose = geometry_msgs.msg.PoseStamped()
tesla_part_pose.header.frame_id = 'world'
tesla_part_pose.pose.position.x = 0.25+0.4
tesla_part_pose.pose.position.y = 3.45
tesla_part_pose.pose.position.z = 0.0
rotation = tf.transformations.quaternion_from_euler(0,0,-pi/2)
tesla_part_pose.pose.orientation.x = rotation[0]
tesla_part_pose.pose.orientation.y = rotation[1]
tesla_part_pose.pose.orientation.z = rotation[2]
tesla_part_pose.pose.orientation.w = rotation[3]

tesla_part_name = 'model_y_rear_axle'

new_scene.add_mesh(tesla_part_name, pose=tesla_part_pose, filename='/home/alexander/iiwa_stack_ws/src/iiwa_stack/iiwa_tesla/iiwa_tesla_publish/src/tesla_part_solo-1487454-03-B_neu (Meshed)002.stl', size=(0.001,0.001,0.001))

new_scene.is_diff = True

update_scene.publish(new_scene)