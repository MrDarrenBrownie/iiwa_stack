#! /usr/bin/env python3

import rospy
from iiwa_msgs.msg import JointPosition
from iiwa_tesla_msgs.srv import HRGoal, HRGoalResponse

signal_position = JointPosition()
last_position = JointPosition()
pose1 = JointPosition()
pose2 = JointPosition()

class hi_res_goal_handler():
    def __init__(self):
        self.response_code = 0
        self.response_code_out = 0
        self.pose_counter = 0
        self.pose1 = JointPosition()
        self.pose2 = JointPosition()
        self.signal_position = JointPosition()
        self.last_position = JointPosition()
        print('response code: '+str(self.response_code))
        print('response code out: '+str(self.response_code_out))

    def handle_new_hr_goal(self, req):
        if self.response_code == 0:

            self.signal_position.position.a1 = req.a1
            self.signal_position.position.a2 = req.a2
            self.signal_position.position.a3 = req.a3
            self.signal_position.position.a4 = req.a4
            self.signal_position.position.a5 = req.a5
            self.signal_position.position.a6 = req.a6
            self.signal_position.position.a7 = req.a7

            self.last_position.position.a1 = req.b1
            self.last_position.position.a2 = req.b2
            self.last_position.position.a3 = req.b3
            self.last_position.position.a4 = req.b4
            self.last_position.position.a5 = req.b5
            self.last_position.position.a6 = req.b6
            self.last_position.position.a7 = req.b7

            self.pose1 = signal_position
            self.pose2 = signal_position

            self.response_code_out = self.response_code
            self.response_code += 1

            print('response code: '+str(self.response_code))
            print('response code out: '+str(self.response_code_out))

            return HRGoalResponse(
                self.response_code_out,
                self.signal_position.position.a1,
                self.signal_position.position.a2,
                self.signal_position.position.a3,
                self.signal_position.position.a4,
                self.signal_position.position.a5,
                self.signal_position.position.a6,
                self.signal_position.position.a7
                )

        elif self.response_code == 1:
            self.response_code_out = self.response_code
            # do some relative movement to signal_position 
            if self.pose_counter == 0:

                self.pose1.position.a1 = 1.0
                
                self.pose_counter += 1 

                print('response code: '+str(self.response_code))
                print('response code out: '+str(self.response_code_out))

                return HRGoalResponse(
                    self.response_code_out,
                    self.pose1.position.a1,
                    self.pose1.position.a2,
                    self.pose1.position.a3,
                    self.pose1.position.a4,
                    self.pose1.position.a5,
                    self.pose1.position.a6,
                    self.pose1.position.a7
                )
            elif self.pose_counter == 1:

                self.pose2.position.a1 = -1.0

                self.response_code += 1
                
                print('response code: '+str(self.response_code))
                print('response code out: '+str(self.response_code_out))

                return HRGoalResponse(
                    self.response_code_out,
                    self.pose2.position.a1,
                    self.pose2.position.a2,
                    self.pose2.position.a3,
                    self.pose2.position.a4,
                    self.pose2.position.a5,
                    self.pose2.position.a6,
                    self.pose2.position.a7
                )
            
        elif self.response_code == 2:
            self.response_code_out = self.response_code
            self.response_code = 0

            print('response code: '+str(self.response_code))
            print('response code out: '+str(self.response_code_out))

            return HRGoalResponse(
                self.response_code_out,
                self.last_position.position.a1,
                self.last_position.position.a2,
                self.last_position.position.a3,
                self.last_position.position.a4,
                self.last_position.position.a5,
                self.last_position.position.a6,
                self.last_position.position.a7            
            ) 

    def listener(self):
        rospy.init_node('SetNewHRGoal', anonymous=True)
        s = rospy.Service('HRGoal', HRGoal, self.handle_new_hr_goal)
        print('high-res-goal server launched')
        rospy.spin()

app = hi_res_goal_handler()
app.listener()